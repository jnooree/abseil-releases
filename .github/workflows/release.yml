name: Create release

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ref:
        description: "Branch or tag to release"
        required: true

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: manylinux2014
            arch: x86_64
            runs-on: ubuntu-latest
          - os: macosx
            arch: x86_64
            runs-on: macos-latest
          - os: macosx
            arch: arm64
            runs-on: macos-latest

    runs-on: ${{ matrix.runs-on }}

    steps:
      - uses: actions/checkout@v4

      - uses: actions/checkout@v4
        with:
          repository: jnooree/abseil-cpp
          ref: ${{ github.event.client_payload.ref || github.event.inputs.ref }}
          path: abseil-cpp

      - if: ${{ matrix.runs-on == 'ubuntu-latest' }}
        run: |
          sudo docker run --rm -v "$PWD:/work" -w /work \
            quay.io/pypa/manylinux2014_x86_64:latest \
            /bin/bash -c "yum install -y ninja-build && \
              ./scripts/build.sh ${{ matrix.os }}_${{ matrix.arch }}"

      - if: ${{ matrix.runs-on == 'macos-latest' }}
        uses: lukka/get-cmake@latest
        with:
          # Universal binary at least from 3.19.7
          cmakeVersion: "3.19.7"

      - if: ${{ matrix.runs-on == 'macos-latest' }}
        run: |
          arch -${{ matrix.arch }} \
            /bin/bash ./scripts/build.sh ${{ matrix.os }}_${{ matrix.arch }}
        env:
          MACOSX_DEPLOYMENT_TARGET: ${{ matrix.arch == 'x86_64' && '10.13' || '11.0' }}

      - uses: actions/upload-artifact@v4
        with:
          name: libabsl-static-${{ matrix.os }}_${{ matrix.arch }}
          path: libabsl-static-*.tar.gz

  release:
    needs: build

    runs-on: ubuntu-latest

    environment:
      name: release

    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: libabsl-static-*

      - name: Create release
        uses: softprops/action-gh-release@v2
        with:
          files: libabsl-static-*.tar.gz
          repository: jnooree/abseil-cpp
          tag_name: ${{ github.event.client_payload.ref || github.event.inputs.ref  }}
          body: "Release ${{ github.event.client_payload.ref || github.event.inputs.ref  }}"
          prerelease: ${{ contains(github.event.client_payload.ref || github.event.inputs.ref, '.rc') }}
          token: ${{ secrets.DEPLOY_TOKEN }}
